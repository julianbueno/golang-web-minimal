steps:

### Build

  - id: 'build'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/$REPO_NAME:${COMMIT_SHA}'
      - '.'
### Test


### Publish
  - id: 'publish'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/$REPO_NAME:${COMMIT_SHA}'      

## Deploy
  - id: 'deploy'
    name: 'gcr.io/cloud-builders/gcloud'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
          CLUSTER=$$(gcloud config get-value container/cluster)
          PROJECT=$$(gcloud config get-value core/project)
          ZONE=$$(gcloud config get-value compute/zone)
          
          echo $${CLUSTER}

          gcloud container clusters get-credentials "$${CLUSTER}" \
            --project "$${PROJECT}" \
            --zone "$${ZONE}"  

          echo sed -i 's|gcr.io/$PROJECT_ID/$REPO_NAME:.*|gcr.io/$PROJECT_ID/$REPO_NAME:${COMMIT_SHA}|' ./.k8s/deployments/*.yaml
          
          # kubectl get ns ${BRANCH_NAME} || kubectl create ns ${BRANCH_NAME}
          # kubectl apply --namespace ${BRANCH_NAME} --recursive -f .k8s/deployments
          # kubectl apply --namespace ${BRANCH_NAME} --recursive -f .k8s/services

          # echo service available at http://`kubectl --namespace=${BRANCH_NAME} get service/golang-web-min-frontend -o jsonpath="{.status.loadBalancer.ingress[0].ip}"`